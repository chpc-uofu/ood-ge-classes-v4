#!/usr/bin/env bash

# Set working directory to home directory

<%- if context.interface == "jupyter" -%>

cd "${HOME}"

ml miniforge3/24.9.0

conda config --add envs_dirs /uufs/chpc.utah.edu/sys/installdir/r8/miniforge3_envs
conda activate biol6500-spring25

# to export to PDF:
module load texlive/2019

#
# Start Jupyter Notebook Server
#

# Workaround for directory permission error
#unset XDG_RUNTIME_DIR
#export XDG_RUNTIME_DIR=""

# List available kernels for debugging purposes
#set -x
jupyter kernelspec list
{ set +x; } 2>/dev/null
echo "TTT - $(date)"

jupyter --paths

#jupyter notebook --generate-config 
# Launch the Jupyter Notebook Server
# jupyter notebook --config="${CONFIG_FILE}" --debug
jupyter lab --config="${CONFIG_FILE}" 

<%- elsif context.interface == "rstudio"  -%>

  #MC R/4.4.0 has issues with debugging in RStudio
  #module load R/4.4.0
  #export R_LIBS=/uufs/chpc.utah.edu/sys/installdir/r8/RLibs/biol6500-spring25-4.4
  module load R/4.3.2
  export R_LIBS=/uufs/chpc.utah.edu/sys/installdir/r8/RLibs/biol6500-spring25-4.3
  RSPATH="/uufs/chpc.utah.edu/sys/installdir/rstudio-server/2023.12.0-369/bin/"
  # let the RStudio session use all the threads it can get (we set OMP_NUM_THREADS=1 in some R modules)
  unset OMP_NUM_THREADS

if [ ! -d "/scratch/local/${USER}" ]; then
    mkdir /scratch/local/${USER}
fi

WORKDIR=/scratch/local/${USER}/${SLURM_JOB_ID}

# PAM auth helper used by RStudio
export RSTUDIO_AUTH="${PWD}/bin/auth"

# bring SLURM environment into the R session
env |grep SLURM > ${PWD}/slurmenv.sh
sed -i 's/SLURM/export SLURM/g' ${PWD}/slurmenv.sh

# Generate an `rsession` wrapper script
export RSESSION_WRAPPER_FILE="${PWD}/rsession.sh"
(
umask 077
sed 's/^ \{2\}//' > "${RSESSION_WRAPPER_FILE}" << EOL
  #!/usr/bin/env bash

  # source Lmod if it's not already sourced - starts in clean environment
  #source /etc/profile.d/chpc.sh
  source /uufs/chpc.utah.edu/sys/etc/chpc.sh
# bring SLURM environment into the R session
  source ${PWD}/slurmenv.sh

  export TZ="America/Denver"

  # Log all output from this script
  export RSESSION_LOG_FILE="${PWD}/rsession.log"
  export RSTUDIO_DATA_HOME=$WORKDIR
#  export R_LIBS=/uufs/chpc.utah.edu/sys/installdir/r8/RLibs/biol6500-spring25-4.4
  export R_LIBS=/uufs/chpc.utah.edu/sys/installdir/r8/RLibs/biol6500-spring25-4.3
  exec &>>"\${RSESSION_LOG_FILE}"
  #echo R_LIBS_SITE $R_LIBS_SITE
  #env
  # load all the modules that are set in the Environment section
  #MC R/4.4.0 has issues with debugging in RStudio
  #module load R/4.4.0
  module load R/4.3.2

  echo "Launching rsession..."
  # Note that the rsession brings in limited environment, it imports PATH, LD_LIBRARY_PATH, MANPATH, ...
  # but not other env. vars. that Lmod needs so "module list" is empty
  exec ${RSPATH}rsession --r-libs-user "${R_LIBS_USER}" "\${@}"
# error --config-file can'd be specified more than once on the command line
#  exec ${RSPATH}rsession --config-file "${WORKDIR}/rsession.conf" --r-libs-user "${R_LIBS_USER}" "\${@}"
EOL
)
chmod 700 "${RSESSION_WRAPPER_FILE}"

# Job walltime in minutes for the authentication timeout setting
WALLMIN=`squeue -h -j $SLURM_JOBID -o "%l" | awk '{split($1, tokens, "-"); if (length(tokens) == 1) { days=0; time=tokens[1]; } else { days=tokens[1]; time=tokens[2]; } split(time, times, ":"); print 60*(times[1]+24*days) + times[2] }'`


cat >${WORKDIR}/rserver.conf <<END
# Server Configuration File
# complaint that auth-timeout-minutes is unrecognized despite https://docs.posit.co/ide/server-pro/authenticating_users/authorization_timeout.html
# must be only the pro option, but based on https://docs.posit.co/ide/server-pro/rstudio-server-configuration.html it's not only in pro
# these two settings are set as command line arguments
# auth-timeout-minutes=0
# auth-stay-signed-in-days=10
session-save-action-default=no
session-timeout-minutes=$WALLMIN
session-timeout-suspend=0
session-rprofile-on-resume-default=0
session-quit-child-processes-on-exit=1
copilot-enabled=1
END

# [Rstudio 1.4] database is required
# config option is required for local RS 
cat > ${WORKDIR}/database.conf <<END
provider=sqlite
directory=${WORKDIR}/database
END

# [Rstudio 1.4] configure logging
# no launch flag to set this, so, only in the containerized RS
cat > ${WORKDIR}/logging.conf <<END
[@rserver]
log-level=info
max-size-mb=10
END

# Set working directory to home directory
cd "${HOME}"

# Output debug info
module list

# echo old TMPDIR $TMPDIR
export TMPDIR=`mktemp -d`

## fix rstudio active session error on start
find ~/.rstudio/sessions/active/*/session-persistent-state -type f | xargs sed -i '' -e 's/abend="1"/abend="0"/'

#
# Start RStudio Server
#
env
# Launch the RStudio Server
echo "Starting up rserver..."
set -x
export RSTUDIO_DATA_HOME=$WORKDIR

  # sqlite is needed for the RS database      
  # it's part of the R8 OS installation, module below was built on CentOS 7
  # ml sqlite

  ${RSPATH}rserver \
    --server-user ${USER} \
    --www-port ${port} \
    --auth-none 0 \
    --auth-pam-helper-path "${RSTUDIO_AUTH}" \
    --auth-encrypt-password 0 \
    --rsession-path "${RSESSION_WRAPPER_FILE}" \
    --server-data-dir "${TMPDIR}" \
    --auth-timeout-minutes="${WALLMIN}" \
    --server-app-armor-enabled=0 \
    --secure-cookie-key-file "${TMPDIR}/rstudio-server/secure-cookie-key" \
    --database-config-file ${WORKDIR}/database.conf \
    --rsession-config-file ${WORKDIR}/rserver.conf


<%- else -%>

# Clean the environment
module purge

# Work around spam message about dconf write permissions
#export XDG_RUNTIME_DIR="/tmp/${UID}"
unset XDG_RUNTIME_DIR

# Set working directory to home directory
cd "${HOME}"

#
# Launch Xfce Window Manager and Panel
#

(
  export SEND_256_COLORS_TO_REMOTE=1
  export XDG_CONFIG_HOME="<%= session.staged_root.join("config") %>"
  export XDG_DATA_HOME="<%= session.staged_root.join("share") %>"
  export XDG_CACHE_HOME="$(mktemp -d)"
  module restore
  xfwm4 --compositor=off --sm-client-disable
  xsetroot -solid "#D3D3D3"
  xfsettingsd --sm-client-disable
  xfce4-panel --sm-client-disable
) &

# Load the required environment
module load vscode/1.87.0

#MC R/4.4.0 has issues with debugging in RStudio
#module load R/4.4.0
module load R/4.3.2
#export R_LIBS=/uufs/chpc.utah.edu/sys/installdir/r8/RLibs/biol6500-spring25-4.4
export R_LIBS=/uufs/chpc.utah.edu/sys/installdir/r8/RLibs/biol6500-spring25-4.3
# Launch VSCode
module list
#set -x
code

<%- end -%>
